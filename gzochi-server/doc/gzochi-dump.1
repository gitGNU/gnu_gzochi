.TH GZOCHI-DUMP 1 "May 4, 2015"
.SH NAME
gzochi-dump \- Write gzochi databases to flat-text format
.SH SYNOPSIS
.B gzochi-dump
[-c <conf>] [-e <engine>] [-o <output_dir>] <app_name or data_dir>[:<db>]
.br
.B gzochi-dump
[-h | -v]
.SH DESCRIPTION
The gzochi-dump utility reads gzochi game application database files and 
writes them to standard output or a file using a portable flat-text format 
understood by the gzochi-load utility. This format is very similar to the 
format used by the dump and load tools for Berkeley DB, though the output of 
gzochi-dump can be read by the other gzochid tools no matter what storage 
engine the server is built against.
.PP
The argument to gzochi-dump is the name of an application or the path to a
directory containing an application's databases. If gzochi-dump detects that the
argument is not a directory, it assumes it must be an application name, and will
consult the server's gzochid.conf file to obtain the root of the server's
application data directory tree, which it uses to resolve the full path to the
application's database files. gzochi-dump may be used to dump any of the three 
gzochi game databases (\fBmeta\fR, \fBoids\fR, or \fBnames\fR) by specifying 
the database name as a suffix of the target. For example, the command:

.IP
gzochi-dump /var/gzochid/data/mygame:meta
.PP

will dump the contents of the \(dqmeta\(dq database to standard output. More 
usefully, however, gzochi-dump can dump all three databases to external files in
a single, consistent transaction, enabling online backups of all game data. For
example, the command:

.IP
gzochi-dump /var/gzochid/data/mygame
.PP

...will create the files \fBmeta.dump\fR, \fBoids.dump\fR, and \fBnames.dump\fR
in the current directory.

.SH OPTIONS
.IP \fB\-c,\ \-\-config\fR
Specify an alternate path to the gzochid.conf file.
.IP \fB\-e,\ \-\-engine\fR
Specify the name of the storage engine that created the target database. The
format of this argument is the same as for the \(dqstore.engine.dir\(dq
setting in gzochid.conf: the basename of the module file, minus the extension.
(E.g., bdb.)
.IP \fB\-o,\ \-\-output\fR
Specifies an output location for the data to be dumped. If dumping a single 
database, the argument names the complete path to a target output file, which
will be created or overwritten if it exists; if dumping all three game 
databases, the argument names the output directory, which must already exist,
into which the files \fBmeta.dump\fR, \fBoids.dump\fR, and \fBnames.dump\fR will
be written. If this argument is omitted, single databases will be dumped to 
standard output; the complete set of game database dump files will be writtento the current directory.
.IP \fB\-h,\ \-\-help\fR
Write usage information to standard error, and exit.
.IP \fB\-v,\ \-\-version\fR
Write version information to standard error, and exit.
.SH ENVIRONMENT
.TP
.B GZOCHID_CONF_LOCATION
If \fB$GZOCHID_CONF_LOCATION\fR is set before \fBgzochi-dump\fR is started, its
value is used as the full path to the server configuration file. This variable 
will be overriden by a command-line argument giving the location of the file, if
present.
.TP
.B GZOCHID_STORAGE_ENGINE_DIR
If \fB$GZOCHID_STORAGE_ENGINE_DIR\fR is set before \fBgzochi-dump\fR is started,
its value is used as the base path for resolving storage engine modules. This
value takes precedence over the \(dqstorage.engine.dir\(dq setting in the server
configuration file.

.SH AUTHOR
Julian Graham (joolean@undecidable.net)
